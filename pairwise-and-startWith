pairwise Парный оператор является отличным инструментом, если также нужно предыдущее значение для каждого элемента. 
Он использует буфер с размером 2, что делает его памятью эффективной. 
Проблема заключается в том, что он не испускает на первом элементе, что делает его результаты на один элемент короче, чем вход.

of(1, 2, 3).pipe(
  pairwise()
).subscribe(console.log.bind(console));

// [1, 2]
// [2, 3]
Т.е. здесь на вход идет 3 значения (1, 2, 3), а на выходе на одно меньше.
Чтобы на выходе было тоже три, можно добавить startWith(0)


of(1, 2, 3).pipe(
  startWith(0),// <--------------------------------
  pairwise()
).subscribe(console.log.bind(console));

// [0, 1]
// [1, 2]
// [2. 3]
